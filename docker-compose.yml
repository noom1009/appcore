version: '3.8'

services:
  postgres:
    image: postgres:14
    container_name: postgres
    restart: always
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
      POSTGRES_DB: myappdb
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data

  redis:
    image: redis:6
    container_name: redis
    ports:
      - "6379:6379"

  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest
    ports:
      - "5672:5672"
      - "15672:15672"  # Web UI

  kafka:
    image: bitnami/kafka:latest
    container_name: kafka
    ports:
      - "9092:9092"
    environment:
        KAFKA_BROKER_ID: 1
        KAFKA_CFG_ZOOKEEPER_CONNECT: zookeeper:2181
        KAFKA_CFG_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092
        KAFKA_CFG_LISTENERS: PLAINTEXT://:9092
        KAFKA_CFG_PROCESS_ROLES: broker,controller
        KAFKA_CFG_NODE_ID: 1
        KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT
        KAFKA_CFG_LISTENER_SECURITY_PROTOCOL: PLAINTEXT
        KAFKA_CFG_LISTENER_NAME: PLAINTEXT
        KAFKA_CFG_LISTENER_PORT: 9092
        KAFKA_CFG_CONTROLLER_LISTENER_NAMES: PLAINTEXT  # เพิ่มการตั้งค่า listener สำหรับ controller
        KAFKA_CFG_CONTROLLER_QUORUM_VOTERS: 1@localhost:9092  # เพิ่มการตั้งค่า quorum voters สำหรับ controller
        KAFKA_CLUSTER_ID: w3lEfJX5QEWuck_PQzE3fA  # เพิ่ม Cluster ID
    depends_on:
      - zookeeper

  zookeeper:
    image: bitnami/zookeeper:latest
    container_name: zookeeper
    ports:
      - "2181:2181"
    environment:
      ALLOW_ANONYMOUS_LOGIN: yes

  kafka-ui:
    image: provectuslabs/kafka-ui:latest
    container_name: kafka-ui
    ports:
      - "8081:8080"
    environment:
      KAFKA_CLUSTERS_0_NAME: local
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka:9092
    depends_on:
      - kafka

  minio:
    image: minio/minio
    container_name: minio
    ports:
      - "9000:9000"  # API
      - "9001:9001"  # Console UI
    environment:
      MINIO_ROOT_USER: your-access-key
      MINIO_ROOT_PASSWORD: your-secret-key
    command: server /data --console-address ":9001"
    volumes:
      - minio-data:/data

  mongo:
    image: mongo:latest
    container_name: mongo
    ports:
      - "27017:27017"
    volumes:
      - mongo-data:/data/db
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: rootpassword

  # otel-collector:
  #   container_name: otel-collector
  #   image: openTelemetry/opentelemetry-collector:latest
  #   ports:
  #     - "55680:55680"  # OTLP receiver
  #   volumes:
  #     - ./otel-collector-config.yaml:/otel-local-config.yaml
  #   command: ["--config", "/otel-local-config.yaml"]
  # SigNoz service
  signoz:
    image: signoz/signoz
    container_name: signoz
    environment:
      - SIGNOZ_UI_HTTP_ADDR=:3301
      - SIGNOZ_COLLECTOR_HTTP_ADDR=:55678
    ports:
      - "3301:3301"  # UI
      - "55678:55678"  # Collector
    volumes:
      - signoz-data:/var/lib/signoz
    depends_on:
      - kafka
      - redis
      - postgres
volumes:
  pgdata:
  minio-data:
  mongo-data:
  signoz-data:

